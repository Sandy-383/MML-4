import sympy as sp
import numpy as np

A = sp.Matrix([[2, 3, -1], [3, 2, 1], [1, -5, 3]])
B = sp.Matrix([[5,10,0]]).T

l21, l31, l32 = sp.symbols('l21 l31 l32')
L = sp.Matrix([[1, 0, 0], [l21, 1, 0], [l31, l32, 1]])

u11, u12, u13, u22, u23, u33 = sp.symbols('u11 u12 u13 u22 u23 u33')
U = sp.Matrix([[u11, u12, u13], [0, u22, u23], [0, 0, u33]])

S = L * U
equations = [S[i,j] - A[i,j] for i in range(3) for j in range(3)]
solutions = sp.solve(equations, (l21, l31, l32, u11, u12, u13, u22, u23, u33))

L_updated = L
i=0
for var in [l21, l31, l32]:
    L_updated = L_updated.subs(var, solutions[0][i])
    i=i+1

U_updated = U
i=3
for var in [u11, u12, u13, u22, u23, u33]:
    U_updated = U_updated.subs(var, solutions[0][i])
    i=i+1

Y=L_updated.LUsolve(B)
X=U_updated.LUsolve(Y)
print("\n X values")
sp.pprint(X)
